/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as MainImport } from './routes/_main'
import { Route as AuthImport } from './routes/_auth'
import { Route as MainIndexImport } from './routes/_main/index'
import { Route as MainSettingsImport } from './routes/_main/settings'
import { Route as MainConnectionsImport } from './routes/_main/connections'
import { Route as MainAdminImport } from './routes/_main/admin'
import { Route as AuthSignupImport } from './routes/_auth/signup'
import { Route as AuthLogoutImport } from './routes/_auth/logout'
import { Route as AuthLoginImport } from './routes/_auth/login'
import { Route as MainUsernameProfileImport } from './routes/_main/$username.profile'

// Create/Update Routes

const MainRoute = MainImport.update({
  id: '/_main',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const MainIndexRoute = MainIndexImport.update({
  path: '/',
  getParentRoute: () => MainRoute,
} as any)

const MainSettingsRoute = MainSettingsImport.update({
  path: '/settings',
  getParentRoute: () => MainRoute,
} as any)

const MainConnectionsRoute = MainConnectionsImport.update({
  path: '/connections',
  getParentRoute: () => MainRoute,
} as any)

const MainAdminRoute = MainAdminImport.update({
  path: '/admin',
  getParentRoute: () => MainRoute,
} as any)

const AuthSignupRoute = AuthSignupImport.update({
  path: '/signup',
  getParentRoute: () => AuthRoute,
} as any)

const AuthLogoutRoute = AuthLogoutImport.update({
  path: '/logout',
  getParentRoute: () => AuthRoute,
} as any)

const AuthLoginRoute = AuthLoginImport.update({
  path: '/login',
  getParentRoute: () => AuthRoute,
} as any)

const MainUsernameProfileRoute = MainUsernameProfileImport.update({
  path: '/$username/profile',
  getParentRoute: () => MainRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/_main': {
      id: '/_main'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof MainImport
      parentRoute: typeof rootRoute
    }
    '/_auth/login': {
      id: '/_auth/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthLoginImport
      parentRoute: typeof AuthImport
    }
    '/_auth/logout': {
      id: '/_auth/logout'
      path: '/logout'
      fullPath: '/logout'
      preLoaderRoute: typeof AuthLogoutImport
      parentRoute: typeof AuthImport
    }
    '/_auth/signup': {
      id: '/_auth/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof AuthSignupImport
      parentRoute: typeof AuthImport
    }
    '/_main/admin': {
      id: '/_main/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof MainAdminImport
      parentRoute: typeof MainImport
    }
    '/_main/connections': {
      id: '/_main/connections'
      path: '/connections'
      fullPath: '/connections'
      preLoaderRoute: typeof MainConnectionsImport
      parentRoute: typeof MainImport
    }
    '/_main/settings': {
      id: '/_main/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof MainSettingsImport
      parentRoute: typeof MainImport
    }
    '/_main/': {
      id: '/_main/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof MainIndexImport
      parentRoute: typeof MainImport
    }
    '/_main/$username/profile': {
      id: '/_main/$username/profile'
      path: '/$username/profile'
      fullPath: '/$username/profile'
      preLoaderRoute: typeof MainUsernameProfileImport
      parentRoute: typeof MainImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  AuthRoute: AuthRoute.addChildren({
    AuthLoginRoute,
    AuthLogoutRoute,
    AuthSignupRoute,
  }),
  MainRoute: MainRoute.addChildren({
    MainAdminRoute,
    MainConnectionsRoute,
    MainSettingsRoute,
    MainIndexRoute,
    MainUsernameProfileRoute,
  }),
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_auth",
        "/_main"
      ]
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/login",
        "/_auth/logout",
        "/_auth/signup"
      ]
    },
    "/_main": {
      "filePath": "_main.tsx",
      "children": [
        "/_main/admin",
        "/_main/connections",
        "/_main/settings",
        "/_main/",
        "/_main/$username/profile"
      ]
    },
    "/_auth/login": {
      "filePath": "_auth/login.tsx",
      "parent": "/_auth"
    },
    "/_auth/logout": {
      "filePath": "_auth/logout.tsx",
      "parent": "/_auth"
    },
    "/_auth/signup": {
      "filePath": "_auth/signup.tsx",
      "parent": "/_auth"
    },
    "/_main/admin": {
      "filePath": "_main/admin.tsx",
      "parent": "/_main"
    },
    "/_main/connections": {
      "filePath": "_main/connections.tsx",
      "parent": "/_main"
    },
    "/_main/settings": {
      "filePath": "_main/settings.tsx",
      "parent": "/_main"
    },
    "/_main/": {
      "filePath": "_main/index.tsx",
      "parent": "/_main"
    },
    "/_main/$username/profile": {
      "filePath": "_main/$username.profile.tsx",
      "parent": "/_main"
    }
  }
}
ROUTE_MANIFEST_END */
