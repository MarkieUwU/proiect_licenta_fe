/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AdminImport } from './routes/admin'
import { Route as MainImport } from './routes/_main'
import { Route as AuthImport } from './routes/_auth'
import { Route as AdminIndexImport } from './routes/admin/index'
import { Route as MainIndexImport } from './routes/_main/index'
import { Route as AdminUsersImport } from './routes/admin/users'
import { Route as AdminDashboardImport } from './routes/admin/dashboard'
import { Route as AdminContentImport } from './routes/admin/content'
import { Route as MainSettingsImport } from './routes/_main/settings'
import { Route as MainNotificationsImport } from './routes/_main/notifications'
import { Route as AuthSignupImport } from './routes/_auth/signup'
import { Route as AuthLogoutImport } from './routes/_auth/logout'
import { Route as AuthLoginImport } from './routes/_auth/login'
import { Route as AuthForgotPasswordImport } from './routes/_auth/forgot-password'
import { Route as AuthEmailSentSuccessfullyImport } from './routes/_auth/email-sent-successfully'
import { Route as MainFriendsIndexImport } from './routes/_main/friends/index'
import { Route as MainFriendsUserIdImport } from './routes/_main/friends/$userId'
import { Route as MainUsernameProfileImport } from './routes/_main/$username.profile'
import { Route as AuthResetPasswordTokenImport } from './routes/_auth/reset-password.$token'

// Create/Update Routes

const AdminRoute = AdminImport.update({
  path: '/admin',
  getParentRoute: () => rootRoute,
} as any)

const MainRoute = MainImport.update({
  id: '/_main',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const AdminIndexRoute = AdminIndexImport.update({
  path: '/',
  getParentRoute: () => AdminRoute,
} as any)

const MainIndexRoute = MainIndexImport.update({
  path: '/',
  getParentRoute: () => MainRoute,
} as any)

const AdminUsersRoute = AdminUsersImport.update({
  path: '/users',
  getParentRoute: () => AdminRoute,
} as any)

const AdminDashboardRoute = AdminDashboardImport.update({
  path: '/dashboard',
  getParentRoute: () => AdminRoute,
} as any)

const AdminContentRoute = AdminContentImport.update({
  path: '/content',
  getParentRoute: () => AdminRoute,
} as any)

const MainSettingsRoute = MainSettingsImport.update({
  path: '/settings',
  getParentRoute: () => MainRoute,
} as any)

const MainNotificationsRoute = MainNotificationsImport.update({
  path: '/notifications',
  getParentRoute: () => MainRoute,
} as any)

const AuthSignupRoute = AuthSignupImport.update({
  path: '/signup',
  getParentRoute: () => AuthRoute,
} as any)

const AuthLogoutRoute = AuthLogoutImport.update({
  path: '/logout',
  getParentRoute: () => AuthRoute,
} as any)

const AuthLoginRoute = AuthLoginImport.update({
  path: '/login',
  getParentRoute: () => AuthRoute,
} as any)

const AuthForgotPasswordRoute = AuthForgotPasswordImport.update({
  path: '/forgot-password',
  getParentRoute: () => AuthRoute,
} as any)

const AuthEmailSentSuccessfullyRoute = AuthEmailSentSuccessfullyImport.update({
  path: '/email-sent-successfully',
  getParentRoute: () => AuthRoute,
} as any)

const MainFriendsIndexRoute = MainFriendsIndexImport.update({
  path: '/friends/',
  getParentRoute: () => MainRoute,
} as any)

const MainFriendsUserIdRoute = MainFriendsUserIdImport.update({
  path: '/friends/$userId',
  getParentRoute: () => MainRoute,
} as any)

const MainUsernameProfileRoute = MainUsernameProfileImport.update({
  path: '/$username/profile',
  getParentRoute: () => MainRoute,
} as any)

const AuthResetPasswordTokenRoute = AuthResetPasswordTokenImport.update({
  path: '/reset-password/$token',
  getParentRoute: () => AuthRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/_main': {
      id: '/_main'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof MainImport
      parentRoute: typeof rootRoute
    }
    '/admin': {
      id: '/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminImport
      parentRoute: typeof rootRoute
    }
    '/_auth/email-sent-successfully': {
      id: '/_auth/email-sent-successfully'
      path: '/email-sent-successfully'
      fullPath: '/email-sent-successfully'
      preLoaderRoute: typeof AuthEmailSentSuccessfullyImport
      parentRoute: typeof AuthImport
    }
    '/_auth/forgot-password': {
      id: '/_auth/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof AuthForgotPasswordImport
      parentRoute: typeof AuthImport
    }
    '/_auth/login': {
      id: '/_auth/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthLoginImport
      parentRoute: typeof AuthImport
    }
    '/_auth/logout': {
      id: '/_auth/logout'
      path: '/logout'
      fullPath: '/logout'
      preLoaderRoute: typeof AuthLogoutImport
      parentRoute: typeof AuthImport
    }
    '/_auth/signup': {
      id: '/_auth/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof AuthSignupImport
      parentRoute: typeof AuthImport
    }
    '/_main/notifications': {
      id: '/_main/notifications'
      path: '/notifications'
      fullPath: '/notifications'
      preLoaderRoute: typeof MainNotificationsImport
      parentRoute: typeof MainImport
    }
    '/_main/settings': {
      id: '/_main/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof MainSettingsImport
      parentRoute: typeof MainImport
    }
    '/admin/content': {
      id: '/admin/content'
      path: '/content'
      fullPath: '/admin/content'
      preLoaderRoute: typeof AdminContentImport
      parentRoute: typeof AdminImport
    }
    '/admin/dashboard': {
      id: '/admin/dashboard'
      path: '/dashboard'
      fullPath: '/admin/dashboard'
      preLoaderRoute: typeof AdminDashboardImport
      parentRoute: typeof AdminImport
    }
    '/admin/users': {
      id: '/admin/users'
      path: '/users'
      fullPath: '/admin/users'
      preLoaderRoute: typeof AdminUsersImport
      parentRoute: typeof AdminImport
    }
    '/_main/': {
      id: '/_main/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof MainIndexImport
      parentRoute: typeof MainImport
    }
    '/admin/': {
      id: '/admin/'
      path: '/'
      fullPath: '/admin/'
      preLoaderRoute: typeof AdminIndexImport
      parentRoute: typeof AdminImport
    }
    '/_auth/reset-password/$token': {
      id: '/_auth/reset-password/$token'
      path: '/reset-password/$token'
      fullPath: '/reset-password/$token'
      preLoaderRoute: typeof AuthResetPasswordTokenImport
      parentRoute: typeof AuthImport
    }
    '/_main/$username/profile': {
      id: '/_main/$username/profile'
      path: '/$username/profile'
      fullPath: '/$username/profile'
      preLoaderRoute: typeof MainUsernameProfileImport
      parentRoute: typeof MainImport
    }
    '/_main/friends/$userId': {
      id: '/_main/friends/$userId'
      path: '/friends/$userId'
      fullPath: '/friends/$userId'
      preLoaderRoute: typeof MainFriendsUserIdImport
      parentRoute: typeof MainImport
    }
    '/_main/friends/': {
      id: '/_main/friends/'
      path: '/friends'
      fullPath: '/friends'
      preLoaderRoute: typeof MainFriendsIndexImport
      parentRoute: typeof MainImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  AuthRoute: AuthRoute.addChildren({
    AuthEmailSentSuccessfullyRoute,
    AuthForgotPasswordRoute,
    AuthLoginRoute,
    AuthLogoutRoute,
    AuthSignupRoute,
    AuthResetPasswordTokenRoute,
  }),
  MainRoute: MainRoute.addChildren({
    MainNotificationsRoute,
    MainSettingsRoute,
    MainIndexRoute,
    MainUsernameProfileRoute,
    MainFriendsUserIdRoute,
    MainFriendsIndexRoute,
  }),
  AdminRoute: AdminRoute.addChildren({
    AdminContentRoute,
    AdminDashboardRoute,
    AdminUsersRoute,
    AdminIndexRoute,
  }),
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_auth",
        "/_main",
        "/admin"
      ]
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/email-sent-successfully",
        "/_auth/forgot-password",
        "/_auth/login",
        "/_auth/logout",
        "/_auth/signup",
        "/_auth/reset-password/$token"
      ]
    },
    "/_main": {
      "filePath": "_main.tsx",
      "children": [
        "/_main/notifications",
        "/_main/settings",
        "/_main/",
        "/_main/$username/profile",
        "/_main/friends/$userId",
        "/_main/friends/"
      ]
    },
    "/admin": {
      "filePath": "admin.tsx",
      "children": [
        "/admin/content",
        "/admin/dashboard",
        "/admin/users",
        "/admin/"
      ]
    },
    "/_auth/email-sent-successfully": {
      "filePath": "_auth/email-sent-successfully.tsx",
      "parent": "/_auth"
    },
    "/_auth/forgot-password": {
      "filePath": "_auth/forgot-password.tsx",
      "parent": "/_auth"
    },
    "/_auth/login": {
      "filePath": "_auth/login.tsx",
      "parent": "/_auth"
    },
    "/_auth/logout": {
      "filePath": "_auth/logout.tsx",
      "parent": "/_auth"
    },
    "/_auth/signup": {
      "filePath": "_auth/signup.tsx",
      "parent": "/_auth"
    },
    "/_main/notifications": {
      "filePath": "_main/notifications.tsx",
      "parent": "/_main"
    },
    "/_main/settings": {
      "filePath": "_main/settings.tsx",
      "parent": "/_main"
    },
    "/admin/content": {
      "filePath": "admin/content.tsx",
      "parent": "/admin"
    },
    "/admin/dashboard": {
      "filePath": "admin/dashboard.tsx",
      "parent": "/admin"
    },
    "/admin/users": {
      "filePath": "admin/users.tsx",
      "parent": "/admin"
    },
    "/_main/": {
      "filePath": "_main/index.tsx",
      "parent": "/_main"
    },
    "/admin/": {
      "filePath": "admin/index.tsx",
      "parent": "/admin"
    },
    "/_auth/reset-password/$token": {
      "filePath": "_auth/reset-password.$token.tsx",
      "parent": "/_auth"
    },
    "/_main/$username/profile": {
      "filePath": "_main/$username.profile.tsx",
      "parent": "/_main"
    },
    "/_main/friends/$userId": {
      "filePath": "_main/friends/$userId.tsx",
      "parent": "/_main"
    },
    "/_main/friends/": {
      "filePath": "_main/friends/index.tsx",
      "parent": "/_main"
    }
  }
}
ROUTE_MANIFEST_END */
